<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Jess Romun | Product Designer</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        /* CSS Custom Properties for Gradient Animation */
        @property --11-x-position {
            syntax: '<percentage>';
            inherits: false;
            initial-value: 20%;
        }
        
        @property --11-y-position {
            syntax: '<percentage>';
            inherits: false;
            initial-value: 80%;
        }
        
        @property --13-x-position {
            syntax: '<percentage>';
            inherits: false;
            initial-value: 80%;
        }
        
        @property --13-y-position {
            syntax: '<percentage>';
            inherits: false;
            initial-value: 80%;
        }
        
        @property --14-x-position {
            syntax: '<percentage>';
            inherits: false;
            initial-value: 80%;
        }
        
        @property --14-y-position {
            syntax: '<percentage>';
            inherits: false;
            initial-value: 80%;
        }

        :root {
            --11-x-position: 20%;
            --11-y-position: 80%;
            --13-x-position: 80%;
            --13-y-position: 80%;
            --14-x-position: 80%;
            --14-y-position: 80%;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        html {
            scroll-snap-type: y mandatory;
            scroll-behavior: smooth;
        }

        body {
            font-family: 'Inter', sans-serif;
            overflow-x: hidden;
        }

        /* Each section takes full viewport and snaps */
        .page-section {
            height: 100vh;
            scroll-snap-align: start;
            scroll-snap-stop: always;
            position: relative;
        }

        /* Menu Styles */
        .menu-container {
            position: fixed;
            top: 2rem;
            right: 2rem;
            z-index: 1000;
        }

        .menu-button {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(15px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 25px;
            cursor: pointer;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            transition: all 0.4s ease;
            padding: 0.75rem 1rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            min-width: 50px;
            justify-content: center;
        }

        .menu-button.work-menu {
            background: rgba(255, 255, 255, 0.9);
            border: 1px solid rgba(0, 0, 0, 0.1);
        }

        .menu-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 25px rgba(0, 0, 0, 0.15);
        }

        .menu-arrow {
            font-size: 1.2rem;
            font-weight: bold;
            transition: all 0.3s ease;
            color: white;
        }

        .work-menu .menu-arrow {
            color: #333;
        }

        .menu-links {
            display: flex;
            gap: 0.75rem;
            opacity: 0;
            max-width: 0;
            overflow: hidden;
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        }

        .menu-links.expanded {
            opacity: 1;
            max-width: 300px;
        }

        .menu-link {
            color: white;
            text-decoration: none;
            font-size: 0.85rem;
            font-weight: 500;
            white-space: nowrap;
            padding: 0.25rem 0.5rem;
            border-radius: 12px;
            transition: all 0.3s ease;
        }

        .work-menu .menu-link {
            color: #333;
        }

        .menu-link:hover {
            background: rgba(255, 255, 255, 0.2);
        }

        .work-menu .menu-link:hover {
            background: rgba(0, 0, 0, 0.1);
        }

        /* Logo */
        .logo {
            position: fixed;
            top: 2rem;
            left: 5vw;
            font-weight: 600;
            font-size: 1.2rem;
            color: white;
            z-index: 1000;
            transition: color 0.3s ease;
        }

        .logo.dark {
            color: #333;
        }

        /* Hero Section */
        .hero {
            background: 
                radial-gradient(100% 100% at var(--11-x-position) var(--11-y-position), #2c2c2c 29%, transparent),
                radial-gradient(100% 100% at var(--13-x-position) var(--13-y-position), #404040 -59%, transparent),
                radial-gradient(100% 100% at var(--14-x-position) var(--14-y-position), #1a1a1a -50%, transparent),
                #121212;
            animation: main 6s ease-in infinite;
            padding: 20vh 5vw 0 5vw;
            display: flex;
            flex-direction: column;
            justify-content: center;
            transition: all 1.5s cubic-bezier(0.4, 0, 0.2, 1);
        }

        /* Hero transition states */
        .hero.transitioning-out {
            filter: blur(15px);
            transform: scale(0.95);
            opacity: 0;
        }

        .hero.transitioning-in {
            filter: blur(15px);
            transform: scale(1.05);
            opacity: 0;
        }

        @keyframes main {
            0%, 100% {
                --11-x-position: 20%;
                --11-y-position: 80%;
                --13-x-position: 80%;
                --13-y-position: 80%;
                --14-x-position: 80%;
                --14-y-position: 80%;
            }
            25% {
                --11-x-position: 15%;
                --11-y-position: 15%;
            }
            50% {
                --11-x-position: 80%;
                --11-y-position: 15%;
                --13-x-position: 20%;
                --13-y-position: 20%;
                --14-x-position: 20%;
                --14-y-position: 20%;
            }
        }

        .hero-title {
            font-size: 3.5rem;
            font-weight: 600;
            color: white;
            margin-bottom: 1.5rem;
            line-height: 1.1;
        }

        .hero-subtitle {
            font-size: 1.4rem;
            font-weight: 300;
            color: rgba(255, 255, 255, 0.9);
            line-height: 1.5;
            max-width: 700px;
        }

        .scroll-hint {
            position: absolute;
            bottom: 3rem;
            left: 5vw;
            color: rgba(255, 255, 255, 0.7);
            font-size: 0.9rem;
            cursor: pointer;
            animation: bounce 2s infinite;
            transition: all 0.3s ease;
        }

        .scroll-hint:hover {
            color: white;
            transform: translateY(-3px);
        }

        @keyframes bounce {
            0%, 20%, 50%, 80%, 100% {
                transform: translateY(0);
            }
            40% {
                transform: translateY(-10px);
            }
            60% {
                transform: translateY(-5px);
            }
        }

        /* Work Sections */
        .work-section {
            background: white;
            padding: 6rem 5vw 2rem 5vw;
            display: flex;
            flex-direction: column;
            justify-content: flex-start;
        }

        .section-title {
            font-size: 2.5rem;
            font-weight: 700;
            color: #1a1a2e;
            margin-bottom: 3rem;
            opacity: 0;
            transform: translateX(-50px);
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        }

        .section-title.visible {
            opacity: 1;
            transform: translateX(0);
        }

        .timeline {
            display: flex;
            align-items: center;
            margin-bottom: 2rem;
            padding: 0.5rem 0;
            width: 100%;
            opacity: 0;
            transform: translateX(-30px);
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1) 0.1s;
        }

        .timeline.visible {
            opacity: 1;
            transform: translateX(0);
        }

        .timeline-item {
            position: relative;
            padding: 0 1rem;
            font-weight: 500;
            color: #333;
            transition: color 0.3s ease;
        }

        .timeline-item:first-child {
            padding-left: 0;
        }

        .timeline-item.active {
            color: #1a1a2e;
            font-weight: 600;
        }

        .timeline-item:not(:last-child)::after {
            content: '';
            position: absolute;
            right: 0;
            top: 50%;
            transform: translateY(-50%);
            width: 6px;
            height: 6px;
            background: #ddd;
            border-radius: 50%;
        }

        .timeline-item.active:not(:last-child)::after {
            background: #1a1a2e;
        }

        .project-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 2rem;
            align-items: stretch;
            flex: 1;
        }

        .project-info {
            display: flex;
            flex-direction: column;
        }

        .project-title {
            font-size: 1.75rem;
            font-weight: 600;
            color: #333;
            margin-bottom: 0.75rem;
            line-height: 1.2;
        }

        .project-tags {
            display: flex;
            flex-wrap: wrap;
            gap: 0.4rem;
            margin-bottom: 1rem;
        }

        .tag {
            background: #f5f5f5;
            color: #666;
            padding: 0.3rem 0.75rem;
            border-radius: 15px;
            font-size: 0.75rem;
            font-weight: 500;
        }

        .project-meta {
            margin-bottom: 1rem;
        }

        .project-meta-item {
            margin-bottom: 0.75rem;
            display: flex;
            align-items: baseline;
        }

        .meta-label {
            font-weight: 600;
            color: #333;
            min-width: 70px;
            margin-right: 0.75rem;
            font-size: 0.9rem;
        }

        .meta-value {
            color: #666;
            line-height: 1.4;
            font-size: 0.9rem;
        }

        .view-project-btn {
            background: #1a1a2e;
            color: white;
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: 6px;
            font-family: 'Inter', sans-serif;
            font-weight: 500;
            cursor: pointer;
            text-decoration: none;
            display: inline-block;
            font-size: 0.9rem;
            align-self: flex-start;
            transition: all 0.3s ease;
        }

        .view-project-btn:hover {
            background: #252547;
            transform: translateY(-2px);
        }

        .project-visual {
            display: flex;
            align-items: flex-start;
            justify-content: center;
        }

        .phone-mockup {
            background: #000;
            border-radius: 30px;
            padding: 6px;
            max-width: 250px;
            width: 100%;
            box-shadow: 0 15px 45px rgba(0, 0, 0, 0.3);
        }

        .phone-screen {
            border-radius: 25px;
            overflow: hidden;
            background: white;
        }

        .mockup-image {
            width: 100%;
            height: auto;
            display: block;
        }

        @media (max-width: 768px) {
            .project-grid {
                grid-template-columns: 1fr;
                gap: 2rem;
            }
            .hero-title {
                font-size: 2.5rem;
            }
            .hero-subtitle {
                font-size: 1.2rem;
            }
        }
    </style>
</head>
<body>
    <!-- Fixed Logo -->
    <div class="logo" id="logo">JR</div>
    
    <!-- Fixed Menu -->
    <div class="menu-container">
        <div class="menu-button" id="menu">
            <span class="menu-arrow" id="menuArrow">←</span>
            <div class="menu-links" id="menuLinks">
                <a href="#hero" class="menu-link">Home</a>
                <a href="#work" class="menu-link">Work</a>
                <a href="#about" class="menu-link">About</a>
                <a href="#contact" class="menu-link">Contact</a>
            </div>
        </div>
    </div>

    <!-- Hero Section -->
    <section class="page-section hero" id="hero">
        <h1 class="hero-title">Hi, I'm Jess</h1>
        <p class="hero-subtitle">I turn messy problems into experiences that just feel right. Product designer exploring AI's potential while obsessing over what users actually need. Curious, collaborative, and I get stuff done.</p>
        
        <div class="scroll-hint" onclick="document.getElementById('work').scrollIntoView({behavior: 'smooth', block: 'start'})">
            Scroll down to see my work ↓
        </div>
    </section>

    <!-- Pondo Project Section -->
    <section class="page-section work-section" id="work">
        <h1 class="section-title">Work</h1>

        <div class="timeline">
            <div class="timeline-item active">Pondo (nov 2025-present)</div>
            <div class="timeline-item">albo</div>
            <div class="timeline-item">Freela</div>
        </div>

        <div class="project-grid">
            <div class="project-info">
                <h2 class="project-title">Building a Health Tech App from Scratch</h2>
                
                <div class="project-tags">
                    <span class="tag">UI Design</span>
                    <span class="tag">UX Design</span>
                    <span class="tag">Visual Design</span>
                    <span class="tag">Brand</span>
                </div>

                <div class="project-meta">
                    <div class="project-meta-item">
                        <span class="meta-label">Time:</span>
                        <span class="meta-value">nov 2025-present</span>
                    </div>
                    <div class="project-meta-item">
                        <span class="meta-label">My Role:</span>
                        <span class="meta-value">Lead Product Designer</span>
                    </div>
                    <div class="project-meta-item">
                        <span class="meta-label">Overview:</span>
                        <span class="meta-value">Designed and built a comprehensive health tracking app focused on digestive wellness and hydration monitoring.</span>
                    </div>
                </div>

                <a href="#" class="view-project-btn">VIEW PROJECT</a>
            </div>

            <div class="project-visual">
                <div class="phone-mockup">
                    <div class="phone-screen">
                        <img src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='250' height='500' viewBox='0 0 250 500'%3E%3Crect width='250' height='500' fill='%23f8f9fa'/%3E%3Ctext x='50%25' y='50%25' text-anchor='middle' dy='.3em' font-family='Arial' font-size='14' fill='%236c757d'%3EPondo Mockup%3C/text%3E%3C/svg%3E" alt="Pondo App Mockup" class="mockup-image">
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Albo Project Section -->
    <section class="page-section work-section" id="albo">
        <h1 class="section-title">Work</h1>

        <div class="timeline">
            <div class="timeline-item">Pondo (nov 2025-present)</div>
            <div class="timeline-item active">albo</div>
            <div class="timeline-item">Freela</div>
        </div>

        <div class="project-grid">
            <div class="project-info">
                <h2 class="project-title">Turning Lending into our Main Revenue: Part 1 - Onboarding</h2>
                
                <div class="project-tags">
                    <span class="tag">UI Design</span>
                    <span class="tag">UX Design</span>
                    <span class="tag">User Research</span>
                </div>

                <div class="project-meta">
                    <div class="project-meta-item">
                        <span class="meta-label">Time:</span>
                        <span class="meta-value">7 min - Time in case</span>
                    </div>
                    <div class="project-meta-item">
                        <span class="meta-label">My Role:</span>
                        <span class="meta-value">Sr. Product Designer, strategy</span>
                    </div>
                    <div class="project-meta-item">
                        <span class="meta-label">Overview:</span>
                        <span class="meta-value">Redesigned onboarding to reduce friction and drive loan adoption cutting steps by 60% and fueling revenue growth.</span>
                    </div>
                </div>

                <a href="#" class="view-project-btn">VIEW FULL PROJECT</a>
            </div>

            <div class="project-visual">
                <div class="phone-mockup">
                    <div class="phone-screen">
                        <img src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='250' height='500' viewBox='0 0 250 500'%3E%3Crect width='250' height='500' fill='%23f0f8ff'/%3E%3Ctext x='50%25' y='50%25' text-anchor='middle' dy='.3em' font-family='Arial' font-size='14' fill='%23333'%3EAlbo Onboarding%3C/text%3E%3C/svg%3E" alt="Albo Onboarding Mockup" class="mockup-image">
                    </div>
                </div>
            </div>
        </div>
    </section>

    <script>
        // Variables de estado
        let currentSection = 'hero';
        let isTransitioning = false;
        let menuExpanded = false;

        // Función para detectar qué sección está visible
        function getCurrentSection() {
            const sections = ['hero', 'work', 'albo'];
            const scrollPosition = window.scrollY;
            const windowHeight = window.innerHeight;
            
            for (let i = 0; i < sections.length; i++) {
                const section = document.getElementById(sections[i]);
                const sectionTop = section.offsetTop;
                const sectionBottom = sectionTop + section.offsetHeight;
                
                if (scrollPosition >= sectionTop - windowHeight/2 && 
                    scrollPosition < sectionBottom - windowHeight/2) {
                    return sections[i];
                }
            }
            return 'hero';
        }

        // Función para mostrar las secciones work
        function showWorkSection(sectionId) {
            console.log('Showing section:', sectionId); // Debug
            const section = document.getElementById(sectionId);
            if (section && section.classList.contains('work-section')) {
                const sectionTitle = section.querySelector('.section-title');
                const timeline = section.querySelector('.timeline');
                const projectInfo = section.querySelector('.project-info');
                const projectVisual = section.querySelector('.project-visual');
                
                // Mostrar elementos con delay escalonado más rápido
                setTimeout(() => {
                    if (sectionTitle) sectionTitle.classList.add('visible');
                }, 50);
                
                setTimeout(() => {
                    if (timeline) timeline.classList.add('visible');
                }, 100);
                
                setTimeout(() => {
                    if (projectInfo) projectInfo.classList.add('visible');
                }, 150);
                
                setTimeout(() => {
                    if (projectVisual) projectVisual.classList.add('visible');
                }, 200);
            }
        }

        // Función para ocultar las secciones work
        function hideWorkSection(sectionId) {
            console.log('Hiding section:', sectionId); // Debug
            const section = document.getElementById(sectionId);
            if (section && section.classList.contains('work-section')) {
                const sectionTitle = section.querySelector('.section-title');
                const timeline = section.querySelector('.timeline');
                const projectInfo = section.querySelector('.project-info');
                const projectVisual = section.querySelector('.project-visual');
                
                // Ocultar elementos rápidamente
                if (sectionTitle) sectionTitle.classList.remove('visible');
                if (timeline) timeline.classList.remove('visible');
                if (projectInfo) projectInfo.classList.remove('visible');
                if (projectVisual) projectVisual.classList.remove('visible');
            }
        }

        // Transiciones automáticas basadas en scroll
        function handleSectionTransitions() {
            const newSection = getCurrentSection();
            
            if (newSection !== currentSection && !isTransitioning) {
                isTransitioning = true;
                
                // Transición Hero → Work (más rápida)
                if (currentSection === 'hero' && newSection === 'work') {
                    const hero = document.getElementById('hero');
                    hero.classList.add('transitioning-out');
                    
                    setTimeout(() => {
                        showWorkSection('work');
                    }, 200);
                }
                
                // Transición Work → Albo (más rápida)
                else if (currentSection === 'work' && newSection === 'albo') {
                    hideWorkSection('work');
                    
                    setTimeout(() => {
                        showWorkSection('albo');
                    }, 150);
                }
                
                // Transición Albo → Work (más rápida)
                else if (currentSection === 'albo' && newSection === 'work') {
                    hideWorkSection('albo');
                    
                    setTimeout(() => {
                        showWorkSection('work');
                    }, 150);
                }
                
                // Transición Work → Hero (mucho más rápida)
                else if (currentSection === 'work' && newSection === 'hero') {
                    const hero = document.getElementById('hero');
                    hideWorkSection('work');
                    
                    setTimeout(() => {
                        hero.classList.remove('transitioning-out');
                        hero.classList.add('transitioning-in');
                    }, 50);
                    
                    setTimeout(() => {
                        hero.classList.remove('transitioning-in');
                    }, 200);
                }
                
                // Transición Albo → Hero (mucho más rápida)
                else if (currentSection === 'albo' && newSection === 'hero') {
                    const hero = document.getElementById('hero');
                    hideWorkSection('albo');
                    
                    setTimeout(() => {
                        hero.classList.remove('transitioning-out');
                        hero.classList.add('transitioning-in');
                    }, 50);
                    
                    setTimeout(() => {
                        hero.classList.remove('transitioning-in');
                    }, 200);
                }
                
                currentSection = newSection;
                
                setTimeout(() => {
                    isTransitioning = false;
                }, 500);
            }
        }

        // Escuchar scroll para transiciones
        let scrollTimeout;
        window.addEventListener('scroll', () => {
            clearTimeout(scrollTimeout);
            scrollTimeout = setTimeout(() => {
                handleSectionTransitions();
            }, 100);
        });

        // Inicializar primera sección y asegurar que los elementos estén en estado inicial
        setTimeout(() => {
            // Asegurar que todos los elementos de work estén en estado inicial
            const workSections = document.querySelectorAll('.work-section');
            workSections.forEach(section => {
                const sectionTitle = section.querySelector('.section-title');
                const timeline = section.querySelector('.timeline');
                const projectInfo = section.querySelector('.project-info');
                const projectVisual = section.querySelector('.project-visual');
                
                // Remover clases visible para asegurar estado inicial
                sectionTitle.classList.remove('visible');
                timeline.classList.remove('visible');
                projectInfo.classList.remove('visible');
                projectVisual.classList.remove('visible');
            });
            
            handleSectionTransitions();
        }, 100);

        function toggleMenu() {
            const arrow = document.getElementById('menuArrow');
            const links = document.getElementById('menuLinks');
            
            if (!menuExpanded) {
                arrow.textContent = '→';
                links.classList.add('expanded');
                menuExpanded = true;
            } else {
                arrow.textContent = '←';
                links.classList.remove('expanded');
                menuExpanded = false;
            }
        }

        // Event listeners
        document.getElementById('menu').addEventListener('click', toggleMenu);

        // Close menu when clicking outside
        document.addEventListener('click', function(e) {
            const menu = document.getElementById('menu');
            if (!menu.contains(e.target) && menuExpanded) {
                toggleMenu();
            }
        });

        // Update logo and menu colors based on current section
        function updateUIColors() {
            const logo = document.getElementById('logo');
            const menu = document.getElementById('menu');
            const scrollPosition = window.scrollY;
            const heroHeight = document.getElementById('hero').offsetHeight;

            if (scrollPosition < heroHeight - 100) {
                // Hero section
                logo.classList.remove('dark');
                menu.classList.remove('work-menu');
            } else {
                // Work sections
                logo.classList.add('dark');
                menu.classList.add('work-menu');
            }
        }

        // Listen for scroll to update colors
        window.addEventListener('scroll', updateUIColors);

        // Smooth scroll for navigation links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            });
        });

        // Initialize colors
        updateUIColors();
    </script>
</body>
</html>
